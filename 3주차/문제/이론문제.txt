1. np.delete로 2차원배열의 행만 삭제가능하고 열은 삭제 불가능하다.
2. np.array를 통해 만든 **[[1, 2, 3, 4]]** 인 배열을 **np.squeeze** 함수를 사용하면 **[1, 2, 3, 4]**의 형태로 바뀐다.
3. 차원이 증가할 수록 변수가 증가하며 개별 차원 내에서 학습할 데이터의 수가 많아진다.
4. arr = np.arange(24).reshape(2,3,-1)를 동작시키면 (2,3,5)모양의 배열이 출력된다.
5. reshape()과 resize()는 array의 형태를 변형시킬 수 있는 기능을 하며, 차이점으로 reshape()함수는 원소의 개수와 변형할 shape이 일치해야하고 resize()는 일치하지 않아도 변형 가능하다.
6. 철수가 경계가 1이고 내부가 0의 값을 가지는 10×10 크기의 2차원 배열을 출력하는 코드를 짰다. 정상적으로 출력되는가?
```
import numpy 

Z = np.zeros((10,10))
Z[1:-1, 1:-1] = 1
print(Z)
```

1. x, axis를 통하여 원하는 축을 결정할 수 있기에 2차원 배열의 행, 열 둘 다 삭제가능
2. o
3. x, 차원의 저주 현상으로 차원이 증가할 수록 데이터간 공간이 많아져 학습의 효율이 떨어진다.
4. x, (2,3,4)모양의 배열이 출력된다.
5. o
6. x
올바른 코드
```
import numpy as np

Z = np.ones((10,10))
Z[1:-1, 1:-1] = 0
print(Z)
```